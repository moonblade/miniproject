/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bloodbank.views;

import bloodbank.GlobalConstants;
import bloodbank.funtions.DataBase;
import bloodbank.models.Donor;
import java.awt.Color;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author moonblade
 */
public class GUIFrames extends javax.swing.JFrame {

    boolean loggedIn = false;
    DefaultTableModel tableModel = new DefaultTableModel(GlobalConstants.col, 0);

    /**
     * Creates new form MainScreen
     */
    public GUIFrames() {
        initComponents();
        changeComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        registerPanel = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        emailRegField = new javax.swing.JTextField();
        emailRegLabel = new javax.swing.JLabel();
        passwordRegLabel = new javax.swing.JLabel();
        confPasswordLabel = new javax.swing.JLabel();
        bloodgroupLabel = new javax.swing.JLabel();
        bloodGroupComboBox = new javax.swing.JComboBox();
        mobileLabel = new javax.swing.JLabel();
        mobileField = new javax.swing.JTextField();
        submitButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        passwordRegField = new javax.swing.JPasswordField();
        confPasswordField = new javax.swing.JPasswordField();
        mainScreenPanel = new javax.swing.JPanel();
        bloodGroupDropDown = new javax.swing.JComboBox();
        searchButton = new javax.swing.JButton();
        scrollTable = new javax.swing.JScrollPane();
        donorListTable = new javax.swing.JTable();
        loginScreenPanel = new javax.swing.JPanel();
        emailField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        signUpButton = new javax.swing.JButton();
        menu = new javax.swing.JMenuBar();
        options = new javax.swing.JMenu();
        searchMenuItem = new javax.swing.JMenuItem();
        registerMenuItem = new javax.swing.JMenuItem();
        profileMenuItem = new javax.swing.JMenuItem();
        loginMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nameLabel.setText("Name");

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        emailRegLabel.setText("Email");

        passwordRegLabel.setText("Password");

        confPasswordLabel.setText("Confirm Password");

        bloodgroupLabel.setText("BloodGroup");

        bloodGroupComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "A+ve", "A-ve", "B+ve", "B-ve", "O+ve", "O-ve", "AB+ve", "AB-ve" }));
        bloodGroupComboBox.setToolTipText("");

        mobileLabel.setText("Mobile");

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout registerPanelLayout = new javax.swing.GroupLayout(registerPanel);
        registerPanel.setLayout(registerPanelLayout);
        registerPanelLayout.setHorizontalGroup(
            registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerPanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registerPanelLayout.createSequentialGroup()
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(registerPanelLayout.createSequentialGroup()
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLabel)
                            .addComponent(emailRegLabel)
                            .addComponent(passwordRegLabel)
                            .addComponent(confPasswordLabel)
                            .addComponent(bloodgroupLabel)
                            .addComponent(mobileLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameField, javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(emailRegField, javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(passwordRegField, javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(confPasswordField, javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(bloodGroupComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mobileField, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(27, 27, 27))
        );
        registerPanelLayout.setVerticalGroup(
            registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerPanelLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailRegLabel)
                    .addComponent(emailRegField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(passwordRegLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passwordRegField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(confPasswordField)
                    .addComponent(confPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bloodGroupComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bloodgroupLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mobileField)
                    .addComponent(mobileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(submitButton))
                .addGap(193, 193, 193))
        );

        getContentPane().add(registerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 390, 550));

        mainScreenPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        bloodGroupDropDown.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A+ve", "A-ve", "B+ve", "B-ve", "O+ve", "O-ve", "AB+ve", "AB-ve" }));
        bloodGroupDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodGroupDropDownActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        donorListTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        donorListTable.setAutoscrolls(false);
        scrollTable.setViewportView(donorListTable);

        javax.swing.GroupLayout mainScreenPanelLayout = new javax.swing.GroupLayout(mainScreenPanel);
        mainScreenPanel.setLayout(mainScreenPanelLayout);
        mainScreenPanelLayout.setHorizontalGroup(
            mainScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollTable, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
            .addGroup(mainScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainScreenPanelLayout.createSequentialGroup()
                    .addGap(103, 103, 103)
                    .addComponent(bloodGroupDropDown, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(104, 104, 104)))
        );
        mainScreenPanelLayout.setVerticalGroup(
            mainScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainScreenPanelLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(scrollTable, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE))
            .addGroup(mainScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainScreenPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(mainScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bloodGroupDropDown))
                    .addGap(505, 505, 505)))
        );

        getContentPane().add(mainScreenPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -1, 390, 550));

        emailField.setToolTipText("Email");

        passwordField.setToolTipText("Password");

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        signUpButton.setForeground(new java.awt.Color(5, 14, 219));
        signUpButton.setText("SignUp");
        signUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginScreenPanelLayout = new javax.swing.GroupLayout(loginScreenPanel);
        loginScreenPanel.setLayout(loginScreenPanelLayout);
        loginScreenPanelLayout.setHorizontalGroup(
            loginScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginScreenPanelLayout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addGroup(loginScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(signUpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(loginScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(emailField)
                        .addComponent(passwordField)
                        .addComponent(loginButton, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)))
                .addContainerGap(117, Short.MAX_VALUE))
        );
        loginScreenPanelLayout.setVerticalGroup(
            loginScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginScreenPanelLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(signUpButton)
                .addContainerGap(274, Short.MAX_VALUE))
        );

        getContentPane().add(loginScreenPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 390, 550));

        options.setText("Options");

        searchMenuItem.setText("Search");
        searchMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchMenuItemActionPerformed(evt);
            }
        });
        options.add(searchMenuItem);

        registerMenuItem.setText("Register Donor");
        registerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerMenuItemActionPerformed(evt);
            }
        });
        options.add(registerMenuItem);

        profileMenuItem.setText("Profile");
        profileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileMenuItemActionPerformed(evt);
            }
        });
        options.add(profileMenuItem);

        if(!loggedIn)
        loginMenuItem.setText("Login");
        else
        loginMenuItem.setText("Logout");
        loginMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginMenuItemActionPerformed(evt);
            }
        });
        options.add(loginMenuItem);

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        options.add(exitMenuItem);

        menu.add(options);

        setJMenuBar(menu);

        setBounds(0, 0, 400, 600);
    }// </editor-fold>//GEN-END:initComponents

    private void bloodGroupDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodGroupDropDownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bloodGroupDropDownActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        String selected = bloodGroupDropDown.getSelectedItem().toString();
        System.out.println("Searching for " + selected);
        DataBase getDonors = new DataBase();
        try {
            ArrayList<Donor> donorList = getDonors.getDonor(selected);
            tableModel.setRowCount(0);
            for (int i = 0; i < donorList.size(); ++i) {
                Donor temp = donorList.get(i);
                Object obj[] = {temp.name, temp.email, temp.bloodgroup, temp.mobile};
                donorList.get(i).print();
                tableModel.addRow(obj);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUIFrames.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
        }

    }//GEN-LAST:event_searchButtonActionPerformed

    private void loginMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginMenuItemActionPerformed
        // TODO add your handling code here:
        System.out.println("Going to login Screen");
        if (loggedIn) {
            loggedIn = false;
            JOptionPane.showMessageDialog(this, "Successfully Logged Out");
            loginMenuItem.setText("Login");
            profileMenuItem.setVisible(loggedIn);
            repaint();
        } else {
            showLoginScreen();
        }
    }//GEN-LAST:event_loginMenuItemActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        // TODO add your handling code here:
        System.out.println("Exiting");
        this.dispose();
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        // TODO add your handling code here:
        DataBase getData = new DataBase();
        try {
            String email = emailField.getText().toString();
            String password = passwordField.getText().toString();
            if (email.equals("") || password.equals("")) {
                JOptionPane.showMessageDialog(this, "Please fill the details");
            } else {
                loggedIn = getData.login(email, password);
                if (loggedIn) {
                    showMainScreen();
                    loginMenuItem.setText("Logout");
                } else {
                    JOptionPane.showMessageDialog(this, "The Email or Password you entered is incorrect");
                }
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUIFrames.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_loginButtonActionPerformed

    private void signUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpButtonActionPerformed
        // TODO add your handling code here:
        showRegisterScreen();
    }//GEN-LAST:event_signUpButtonActionPerformed

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        showMainScreen();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        String name = nameField.getText().toString();
        String email = emailRegField.getText().toString();
        String bloodGroup = bloodGroupComboBox.getSelectedItem().toString();
        String password = passwordRegField.getText().toString();
        String confPass = confPasswordField.getText().toString();
        String mobile = mobileField.getText().toString();
        if (name.equals("") || email.equals("") || password.equals("") || confPass.equals("") || mobile.equals("") || bloodGroup.equals("Select")) {
            JOptionPane.showMessageDialog(this, "All details are mandatory");
        } else if (!password.equals(confPass)) {
            JOptionPane.showMessageDialog(this, "Passwords do not match");
        } else {
            DataBase putData = new DataBase();
            try {
                if (putData.addDonor(new Donor(name, email, password, bloodGroup, mobile))) {
                    JOptionPane.showMessageDialog(this, "Successfully Registered!");
                    showLoginScreen();
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(GUIFrames.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void searchMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMenuItemActionPerformed
        // TODO add your handling code here:
        showMainScreen();
    }//GEN-LAST:event_searchMenuItemActionPerformed

    private void registerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerMenuItemActionPerformed
        // TODO add your handling code here:
        showRegisterScreen();
    }//GEN-LAST:event_registerMenuItemActionPerformed

    private void profileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_profileMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIFrames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIFrames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIFrames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIFrames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIFrames().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox bloodGroupComboBox;
    private javax.swing.JComboBox bloodGroupDropDown;
    private javax.swing.JLabel bloodgroupLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPasswordField confPasswordField;
    private javax.swing.JLabel confPasswordLabel;
    private javax.swing.JTable donorListTable;
    private javax.swing.JTextField emailField;
    private javax.swing.JTextField emailRegField;
    private javax.swing.JLabel emailRegLabel;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JButton loginButton;
    private javax.swing.JMenuItem loginMenuItem;
    private javax.swing.JPanel loginScreenPanel;
    private javax.swing.JPanel mainScreenPanel;
    private javax.swing.JMenuBar menu;
    private javax.swing.JTextField mobileField;
    private javax.swing.JLabel mobileLabel;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JMenu options;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JPasswordField passwordRegField;
    private javax.swing.JLabel passwordRegLabel;
    private javax.swing.JMenuItem profileMenuItem;
    private javax.swing.JMenuItem registerMenuItem;
    private javax.swing.JPanel registerPanel;
    private javax.swing.JScrollPane scrollTable;
    private javax.swing.JButton searchButton;
    private javax.swing.JMenuItem searchMenuItem;
    private javax.swing.JButton signUpButton;
    private javax.swing.JButton submitButton;
    // End of variables declaration//GEN-END:variables

    private void changeComponents() {
        donorListTable.setModel(tableModel);
        showMainScreen();
    }

    private void showMainScreen() {
        hideAll();
        mainScreenPanel.setVisible(true);
        setTitle("Search Donors");
    }

    private void showLoginScreen() {
        hideAll();
        nameField.setText("");
        passwordRegField.setText("");
        confPasswordField.setText("");
        mobileField.setText("");
        emailRegField.setText("");
        bloodGroupComboBox.setSelectedItem(0);
        loginScreenPanel.setVisible(true);
        setTitle("Login");
    }

    private void hideAll() {
        loginScreenPanel.setVisible(false);
        mainScreenPanel.setVisible(false);
        registerPanel.setVisible(false);
        profileMenuItem.setVisible(loggedIn);
        repaint();
    }

    private void showRegisterScreen() {
        hideAll();
        registerPanel.setVisible(true);
    }
}
