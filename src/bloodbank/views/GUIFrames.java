/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bloodbank.views;

import bloodbank.GlobalVariables;
import bloodbank.funtions.Database;
import bloodbank.models.Donation;
import bloodbank.models.Donor;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author moonblade
 */
public class GUIFrames extends javax.swing.JFrame {

    boolean loggedIn = false;
    DefaultTableModel tableModel = new DefaultTableModel(GlobalVariables.col, 0) {
        @Override
        public boolean isCellEditable(int row, int column) {
            //all cells false
            return false;
        }
    };
    DefaultTableModel requestTableModel = new DefaultTableModel(GlobalVariables.requestCol, 0) {
        @Override
        public boolean isCellEditable(int row, int column) {
            //all cells false
            return false;
        }
    };
    DefaultTableModel historyTableModel = new DefaultTableModel(GlobalVariables.historyCol, 0) {
        @Override
        public boolean isCellEditable(int row, int column) {
            //all cells false
            return false;
        }
    };

    /**
     * Creates new form MainScreen
     */
    public GUIFrames() {
        initComponents();
        changeComponents();
        setVisible(true);
    }

    public static void main() {
        GUIFrames start = new GUIFrames();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        changePasswordDialog = new javax.swing.JDialog();
        currentPasswordLabel = new javax.swing.JLabel();
        currentPasswordField = new javax.swing.JPasswordField();
        newPasswordLabel = new javax.swing.JLabel();
        newPasswordField = new javax.swing.JPasswordField();
        confNewPasswordLabel = new javax.swing.JLabel();
        submitChangeButton = new javax.swing.JButton();
        confNewPasswordField = new javax.swing.JPasswordField();
        cancelChangeButton = new javax.swing.JButton();
        donateAcceptDialog = new javax.swing.JDialog();
        dateDonLabel = new javax.swing.JLabel();
        acceptDonButton = new javax.swing.JButton();
        cancelDonButton = new javax.swing.JButton();
        dateDonField = new javax.swing.JTextField();
        rejectDonButton = new javax.swing.JButton();
        requestDonationDialog = new javax.swing.JDialog();
        nameReqLabel = new javax.swing.JLabel();
        newPasswordReqLabel = new javax.swing.JLabel();
        requestReqButton = new javax.swing.JButton();
        cancelReqButton = new javax.swing.JButton();
        nameReqField = new javax.swing.JTextField();
        mobileReqField = new javax.swing.JTextField();
        searchScreenPanel = new javax.swing.JPanel();
        bloodGroupDropDown = new javax.swing.JComboBox();
        searchButton = new javax.swing.JButton();
        scrollTable = new javax.swing.JScrollPane();
        donorListTable = new javax.swing.JTable();
        profilePanel = new javax.swing.JPanel();
        nameProfLabel = new javax.swing.JLabel();
        nameProfField = new javax.swing.JTextField();
        emailProfField = new javax.swing.JTextField();
        emailProfLabel = new javax.swing.JLabel();
        bloodGroupProfLabel = new javax.swing.JLabel();
        bloodGroupProfDropDown = new javax.swing.JComboBox();
        mobileProfField = new javax.swing.JTextField();
        mobileProfLabel = new javax.swing.JLabel();
        resetProfButton = new javax.swing.JButton();
        editProfButton = new javax.swing.JButton();
        changePasswordButton = new javax.swing.JButton();
        pendingRequest = new javax.swing.JPanel();
        pendingRequestTableScroll = new javax.swing.JScrollPane();
        pendingRequestTable = new javax.swing.JTable();
        pendingRequestLabel = new javax.swing.JLabel();
        historyRequest = new javax.swing.JPanel();
        historyRequestLabel = new javax.swing.JLabel();
        historyRequestTableScroll = new javax.swing.JScrollPane();
        historyRequestTable = new javax.swing.JTable();
        registerPanel = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        emailRegField = new javax.swing.JTextField();
        emailRegLabel = new javax.swing.JLabel();
        passwordRegLabel = new javax.swing.JLabel();
        confPasswordLabel = new javax.swing.JLabel();
        bloodgroupLabel = new javax.swing.JLabel();
        bloodGroupComboBox = new javax.swing.JComboBox();
        mobileLabel = new javax.swing.JLabel();
        mobileField = new javax.swing.JTextField();
        submitButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        passwordRegField = new javax.swing.JPasswordField();
        confPasswordField = new javax.swing.JPasswordField();
        loginScreenPanel = new javax.swing.JPanel();
        emailField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        signUpButton = new javax.swing.JButton();
        menu = new javax.swing.JMenuBar();
        options = new javax.swing.JMenu();
        searchMenuItem = new javax.swing.JMenuItem();
        registerMenuItem = new javax.swing.JMenuItem();
        profileMenuItem = new javax.swing.JMenuItem();
        loginMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();

        changePasswordDialog.pack();
        changePasswordDialog.setSize(400,400);

        currentPasswordLabel.setText("Current Password");

        newPasswordLabel.setText("New Password");

        confNewPasswordLabel.setText("Confirm New Password");

        submitChangeButton.setText("Submit");
        submitChangeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitChangeButtonActionPerformed(evt);
            }
        });

        cancelChangeButton.setText("Cancel");
        cancelChangeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelChangeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout changePasswordDialogLayout = new javax.swing.GroupLayout(changePasswordDialog.getContentPane());
        changePasswordDialog.getContentPane().setLayout(changePasswordDialogLayout);
        changePasswordDialogLayout.setHorizontalGroup(
            changePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, changePasswordDialogLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(changePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, changePasswordDialogLayout.createSequentialGroup()
                        .addComponent(cancelChangeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(submitChangeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(changePasswordDialogLayout.createSequentialGroup()
                        .addGroup(changePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(confNewPasswordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                            .addComponent(currentPasswordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(newPasswordLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(41, 41, 41)
                        .addGroup(changePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, changePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(currentPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(newPasswordField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(confNewPasswordField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(33, 33, 33))
        );
        changePasswordDialogLayout.setVerticalGroup(
            changePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(changePasswordDialogLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(changePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(currentPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(changePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newPasswordField))
                .addGap(18, 18, 18)
                .addGroup(changePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confNewPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confNewPasswordField))
                .addGap(41, 41, 41)
                .addGroup(changePasswordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitChangeButton)
                    .addComponent(cancelChangeButton))
                .addGap(38, 38, 38))
        );

        changePasswordDialog.pack();
        changePasswordDialog.setSize(400,400);

        dateDonLabel.setText("Date");

        acceptDonButton.setText("Accept");
        acceptDonButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptDonButtonActionPerformed(evt);
            }
        });

        cancelDonButton.setText("Cancel");
        cancelDonButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelDonButtonActionPerformed(evt);
            }
        });

        rejectDonButton.setText("Reject");
        rejectDonButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectDonButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout donateAcceptDialogLayout = new javax.swing.GroupLayout(donateAcceptDialog.getContentPane());
        donateAcceptDialog.getContentPane().setLayout(donateAcceptDialogLayout);
        donateAcceptDialogLayout.setHorizontalGroup(
            donateAcceptDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, donateAcceptDialogLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(donateAcceptDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, donateAcceptDialogLayout.createSequentialGroup()
                        .addComponent(cancelDonButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rejectDonButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(acceptDonButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, donateAcceptDialogLayout.createSequentialGroup()
                        .addComponent(dateDonLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dateDonField, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44))
        );
        donateAcceptDialogLayout.setVerticalGroup(
            donateAcceptDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(donateAcceptDialogLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(donateAcceptDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateDonLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateDonField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(donateAcceptDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acceptDonButton)
                    .addComponent(cancelDonButton)
                    .addComponent(rejectDonButton))
                .addContainerGap())
        );

        changePasswordDialog.pack();
        changePasswordDialog.setSize(400,400);

        nameReqLabel.setText("Name");

        newPasswordReqLabel.setText("Mobile");

        requestReqButton.setText("Request");
        requestReqButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestReqButtonActionPerformed(evt);
            }
        });

        cancelReqButton.setText("Cancel");
        cancelReqButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelReqButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout requestDonationDialogLayout = new javax.swing.GroupLayout(requestDonationDialog.getContentPane());
        requestDonationDialog.getContentPane().setLayout(requestDonationDialogLayout);
        requestDonationDialogLayout.setHorizontalGroup(
            requestDonationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, requestDonationDialogLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(requestDonationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(requestDonationDialogLayout.createSequentialGroup()
                        .addComponent(cancelReqButton, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addComponent(requestReqButton, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(requestDonationDialogLayout.createSequentialGroup()
                        .addGroup(requestDonationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(nameReqLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(newPasswordReqLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
                        .addGap(41, 41, 41)
                        .addGroup(requestDonationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nameReqField, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mobileReqField, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(33, 33, 33))
        );
        requestDonationDialogLayout.setVerticalGroup(
            requestDonationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(requestDonationDialogLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(requestDonationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameReqLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameReqField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(requestDonationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPasswordReqLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mobileReqField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(requestDonationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(requestReqButton)
                    .addComponent(cancelReqButton))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        searchScreenPanel.setAlignmentX(0.0F);
        searchScreenPanel.setAlignmentY(0.0F);
        searchScreenPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        searchScreenPanel.setPreferredSize(new java.awt.Dimension(400, 500));

        bloodGroupDropDown.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A+ve", "A-ve", "B+ve", "B-ve", "O+ve", "O-ve", "AB+ve", "AB-ve" }));
        bloodGroupDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodGroupDropDownActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        scrollTable.setAlignmentX(0.0F);
        scrollTable.setAlignmentY(0.0F);

        donorListTable.setAutoCreateRowSorter(true);
        donorListTable.setAlignmentX(0.0F);
        donorListTable.setAlignmentY(0.0F);
        donorListTable.setAutoscrolls(false);
        donorListTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        donorListTable.setFillsViewportHeight(true);
        scrollTable.setViewportView(donorListTable);

        javax.swing.GroupLayout searchScreenPanelLayout = new javax.swing.GroupLayout(searchScreenPanel);
        searchScreenPanel.setLayout(searchScreenPanelLayout);
        searchScreenPanelLayout.setHorizontalGroup(
            searchScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollTable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
            .addGroup(searchScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchScreenPanelLayout.createSequentialGroup()
                    .addGap(103, 103, 103)
                    .addComponent(bloodGroupDropDown, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(104, 104, 104)))
        );
        searchScreenPanelLayout.setVerticalGroup(
            searchScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchScreenPanelLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(scrollTable, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE))
            .addGroup(searchScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(searchScreenPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(searchScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bloodGroupDropDown))
                    .addGap(505, 505, 505)))
        );

        getContentPane().add(searchScreenPanel, "card2");
        searchScreenPanel.getAccessibleContext().setAccessibleName("");

        nameProfLabel.setText("Date");

        nameProfField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameProfFieldActionPerformed(evt);
            }
        });

        emailProfLabel.setText("Email");

        bloodGroupProfLabel.setText("BloodGroup");

        bloodGroupProfDropDown.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A+ve", "A-ve", "B+ve", "B-ve", "O+ve", "O-ve", "AB+ve", "AB-ve" }));
        bloodGroupProfDropDown.setToolTipText("");

        mobileProfLabel.setText("Mobile");

        resetProfButton.setText("Reset");
        resetProfButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetProfButtonActionPerformed(evt);
            }
        });

        editProfButton.setText("Edit");
        editProfButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editProfButtonActionPerformed(evt);
            }
        });

        changePasswordButton.setText("Change Password");
        changePasswordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePasswordButtonActionPerformed(evt);
            }
        });

        pendingRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        pendingRequestTableScroll.setViewportView(pendingRequestTable);

        pendingRequestLabel.setText("Pending Requests");

        javax.swing.GroupLayout pendingRequestLayout = new javax.swing.GroupLayout(pendingRequest);
        pendingRequest.setLayout(pendingRequestLayout);
        pendingRequestLayout.setHorizontalGroup(
            pendingRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pendingRequestLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(pendingRequestLabel)
                .addContainerGap(36, Short.MAX_VALUE))
            .addComponent(pendingRequestTableScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        pendingRequestLayout.setVerticalGroup(
            pendingRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pendingRequestLayout.createSequentialGroup()
                .addComponent(pendingRequestLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pendingRequestTableScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        historyRequestLabel.setText("History");

        historyRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        historyRequestTableScroll.setViewportView(historyRequestTable);

        javax.swing.GroupLayout historyRequestLayout = new javax.swing.GroupLayout(historyRequest);
        historyRequest.setLayout(historyRequestLayout);
        historyRequestLayout.setHorizontalGroup(
            historyRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(historyRequestTableScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, historyRequestLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(historyRequestLabel)
                .addGap(72, 72, 72))
        );
        historyRequestLayout.setVerticalGroup(
            historyRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, historyRequestLayout.createSequentialGroup()
                .addComponent(historyRequestLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(historyRequestTableScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout profilePanelLayout = new javax.swing.GroupLayout(profilePanel);
        profilePanel.setLayout(profilePanelLayout);
        profilePanelLayout.setHorizontalGroup(
            profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilePanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(resetProfButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nameProfLabel)
                    .addComponent(emailProfLabel)
                    .addComponent(bloodGroupProfLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mobileProfLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(profilePanelLayout.createSequentialGroup()
                        .addComponent(changePasswordButton, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editProfButton, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(nameProfField, javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(emailProfField, javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(bloodGroupProfDropDown, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mobileProfField, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(29, 29, 29))
            .addGroup(profilePanelLayout.createSequentialGroup()
                .addComponent(pendingRequest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(historyRequest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        profilePanelLayout.setVerticalGroup(
            profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilePanelLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameProfLabel)
                    .addComponent(nameProfField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailProfLabel)
                    .addComponent(emailProfField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bloodGroupProfDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bloodGroupProfLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mobileProfField)
                    .addComponent(mobileProfLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editProfButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(resetProfButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(changePasswordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pendingRequest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(historyRequest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        getContentPane().add(profilePanel, "card3");

        nameLabel.setText("Name");

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        emailRegLabel.setText("Email");

        passwordRegLabel.setText("Password");

        confPasswordLabel.setText("Confirm Password");

        bloodgroupLabel.setText("BloodGroup");

        bloodGroupComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "A+ve", "A-ve", "B+ve", "B-ve", "O+ve", "O-ve", "AB+ve", "AB-ve" }));
        bloodGroupComboBox.setToolTipText("");

        mobileLabel.setText("Mobile");

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout registerPanelLayout = new javax.swing.GroupLayout(registerPanel);
        registerPanel.setLayout(registerPanelLayout);
        registerPanelLayout.setHorizontalGroup(
            registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerPanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registerPanelLayout.createSequentialGroup()
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(registerPanelLayout.createSequentialGroup()
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLabel)
                            .addComponent(emailRegLabel)
                            .addComponent(passwordRegLabel)
                            .addComponent(confPasswordLabel)
                            .addComponent(bloodgroupLabel)
                            .addComponent(mobileLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameField, javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(emailRegField, javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(passwordRegField, javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(confPasswordField, javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(bloodGroupComboBox, javax.swing.GroupLayout.Alignment.CENTER, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mobileField, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(27, 27, 27))
        );
        registerPanelLayout.setVerticalGroup(
            registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerPanelLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailRegLabel)
                    .addComponent(emailRegField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(passwordRegLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passwordRegField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(confPasswordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(confPasswordField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bloodGroupComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bloodgroupLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mobileLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mobileField))
                .addGap(18, 18, 18)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(193, 193, 193))
        );

        getContentPane().add(registerPanel, "card4");

        emailField.setToolTipText("Email");

        passwordField.setToolTipText("Password");

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        signUpButton.setForeground(new java.awt.Color(5, 14, 219));
        signUpButton.setText("SignUp");
        signUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginScreenPanelLayout = new javax.swing.GroupLayout(loginScreenPanel);
        loginScreenPanel.setLayout(loginScreenPanelLayout);
        loginScreenPanelLayout.setHorizontalGroup(
            loginScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginScreenPanelLayout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addGroup(loginScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(signUpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(loginScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(emailField)
                        .addComponent(passwordField)
                        .addComponent(loginButton, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)))
                .addContainerGap(117, Short.MAX_VALUE))
        );
        loginScreenPanelLayout.setVerticalGroup(
            loginScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginScreenPanelLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(signUpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(273, Short.MAX_VALUE))
        );

        getContentPane().add(loginScreenPanel, "card5");

        options.setText("Options");

        searchMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        searchMenuItem.setText("Search");
        searchMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchMenuItemActionPerformed(evt);
            }
        });
        options.add(searchMenuItem);

        registerMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        registerMenuItem.setText("Register Donor");
        registerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerMenuItemActionPerformed(evt);
            }
        });
        options.add(registerMenuItem);

        profileMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        profileMenuItem.setText("Profile");
        profileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileMenuItemActionPerformed(evt);
            }
        });
        options.add(profileMenuItem);

        loginMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        if(!loggedIn){
            loginMenuItem.setText("Login");
        }else{
            loginMenuItem.setText("Logout");
        }
        loginMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginMenuItemActionPerformed(evt);
            }
        });
        options.add(loginMenuItem);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        options.add(exitMenuItem);

        menu.add(options);

        setJMenuBar(menu);

        setBounds(0, 0, 400, 600);
    }// </editor-fold>//GEN-END:initComponents

    private void bloodGroupDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodGroupDropDownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bloodGroupDropDownActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        String selected = bloodGroupDropDown.getSelectedItem().toString();
        System.out.println("Searching for " + selected);
        Database getDonors = new Database();
        try {
            ArrayList<Donor> donorList = getDonors.getDonor(selected);
            tableModel.setRowCount(0);
            for (int i = 0; i < donorList.size(); ++i) {
                Donor temp = donorList.get(i);
                Object obj[] = {temp.id, temp.name, temp.email, temp.bloodgroup, temp.mobile};
                donorList.get(i).print();
                tableModel.addRow(obj);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUIFrames.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
        }

    }//GEN-LAST:event_searchButtonActionPerformed

    private void loginMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginMenuItemActionPerformed
        // TODO add your handling code here:
        System.out.println("Going to login Screen");
        if (loggedIn) {
            loggedIn = false;
            loginMenuItem.setText("Login");
            GlobalVariables.me = new Donor();
            showSearchScreen();
            profileMenuItem.setVisible(loggedIn);
            JOptionPane.showMessageDialog(this, "Successfully Logged Out");
            repaint();
        } else {
            showLoginScreen();
        }
    }//GEN-LAST:event_loginMenuItemActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        // TODO add your handling code here:
        System.out.println("Exiting");
        this.dispose();
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        // TODO add your handling code here:
        Database getData = new Database();
        try {
            String email = emailField.getText().toString();
            String password = passwordField.getText().toString();
            if (email.equals("") || password.equals("")) {
                JOptionPane.showMessageDialog(this, "Please fill the details");
            } else {
                loggedIn = getData.login(email, password);
                if (loggedIn) {
                    showSearchScreen();
                    loginMenuItem.setText("Logout");
                } else {
                    JOptionPane.showMessageDialog(this, "The Email or Password you entered is incorrect");
                }
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUIFrames.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_loginButtonActionPerformed

    private void signUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpButtonActionPerformed
        // TODO add your handling code here:
        showRegisterScreen();
    }//GEN-LAST:event_signUpButtonActionPerformed

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        showSearchScreen();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        String name = nameField.getText();
        String email = emailRegField.getText();
        String bloodGroup = bloodGroupComboBox.getSelectedItem().toString();
        String password = passwordRegField.getText();
        String confPass = confPasswordField.getText();
        String mobile = mobileField.getText();
        if (name.equals("") || email.equals("") || password.equals("") || confPass.equals("") || mobile.equals("") || bloodGroup.equals("Select")) {
            JOptionPane.showMessageDialog(this, "All details are mandatory");
        } else if (!password.equals(confPass)) {
            JOptionPane.showMessageDialog(this, "Passwords do not match");
        } else {
            Database putData = new Database();
            try {
                if (putData.addDonor(new Donor(name, email, password, bloodGroup, mobile))) {
                    JOptionPane.showMessageDialog(this, "Successfully Registered!");
                    showLoginScreen();
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(GUIFrames.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void searchMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMenuItemActionPerformed
        // TODO add your handling code here:
        showSearchScreen();
    }//GEN-LAST:event_searchMenuItemActionPerformed

    private void registerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerMenuItemActionPerformed
        // TODO add your handling code here:
        showRegisterScreen();
    }//GEN-LAST:event_registerMenuItemActionPerformed

    private void profileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileMenuItemActionPerformed
        try {
            // TODO add your handling code here:
            showProfileScreen(GlobalVariables.me);
            Database d = new Database();
            requestTableModel.setRowCount(0);
            historyTableModel.setRowCount(0);
            ArrayList<Donation> donationList = d.returnRequests(GlobalVariables.me.id);
            if (donationList != null) {
                System.out.println(donationList.size() + "");
                for (Donation donation : donationList) {
                    if (donation.status == 0) {
                        Object obj[] = {donation.name, donation.mobile};
                        requestTableModel.addRow(obj);
                    } else if (donation.status == 1) {
                        Object obj[] = {donation.name, donation.dateString};
                        historyTableModel.addRow(obj);
                    }
                }
                pendingRequestTable.setModel(requestTableModel);
                historyRequestTable.setModel(historyTableModel);
            } else {
                pendingRequestTableScroll.setVisible(false);
                pendingRequestLabel.setVisible(false);
                historyRequestTableScroll.setVisible(false);
                historyRequestLabel.setVisible(false);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUIFrames.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_profileMenuItemActionPerformed

    private void nameProfFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameProfFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameProfFieldActionPerformed

    private void resetProfButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetProfButtonActionPerformed
        // TODO add your handling code here:
        nameProfField.setText(GlobalVariables.me.name);
        emailProfField.setText(GlobalVariables.me.email);
        bloodGroupProfDropDown.setSelectedItem(GlobalVariables.me.bloodgroup);
        mobileProfField.setText(GlobalVariables.me.mobile);
    }//GEN-LAST:event_resetProfButtonActionPerformed

    private void editProfButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editProfButtonActionPerformed
        // TODO add your handling code here:
        String name = nameProfField.getText().toString();
        String email = emailProfField.getText().toString();
        String bloodGroup = bloodGroupProfDropDown.getSelectedItem().toString();
        String mobile = mobileProfField.getText().toString();
        Donor d = new Donor(GlobalVariables.me.id, name, email, GlobalVariables.me.password, bloodGroup, mobile);
        Database database = new Database();
        try {
            if (database.editDonor(d)) {
                JOptionPane.showMessageDialog(this, "Edit Successful");
                GlobalVariables.me = d;
                changePasswordDialog.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(this, "Some Error Occurred");
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUIFrames.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_editProfButtonActionPerformed

    private void changePasswordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePasswordButtonActionPerformed
        // TODO add your handling code here:
        changePasswordDialog.setLocation(this.getLocation());
        changePasswordDialog.setVisible(true);
    }//GEN-LAST:event_changePasswordButtonActionPerformed

    private void submitChangeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitChangeButtonActionPerformed
        // TODO add your handling code here:
        String currentPassword = currentPasswordField.getText().toString();
        String newPassword = newPasswordField.getText().toString();
        String confNewPassword = confNewPasswordField.getText().toString();
        if (currentPassword.equals("") || newPassword.equals("") || confNewPassword.equals("")) {
            JOptionPane.showMessageDialog(this, "All Fields are mandatory");
        } else if (!newPassword.equals(confNewPassword)) {
            JOptionPane.showMessageDialog(this, "Passwords dont match");
        } else {
            Donor d = GlobalVariables.me;
            d.password = newPassword;
            Database database = new Database();
            try {
                if (database.editDonor(d)) {
                    JOptionPane.showMessageDialog(this, "Password Changed Successfully");
                    GlobalVariables.me.password = newPassword;
                    changePasswordDialog.setVisible(false);
                } else {
                    JOptionPane.showMessageDialog(this, "Some Error Occurred");
                }

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(GUIFrames.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_submitChangeButtonActionPerformed

    private void cancelChangeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelChangeButtonActionPerformed
        // TODO add your handling code here:
        changePasswordDialog.setVisible(false);
    }//GEN-LAST:event_cancelChangeButtonActionPerformed

    private void acceptDonButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptDonButtonActionPerformed
        // TODO add your handling code here:
        String date = dateDonField.getText();
        if (date.equals("")) {
            JOptionPane.showMessageDialog(this, "All fields are mandatory");
        } else {
            try {
                Database d = new Database();
                if (d.editRequest(GlobalVariables.me.id, GlobalVariables.nameAccept,date, 1)) {
                    donateAcceptDialog.setVisible(false);
                    JOptionPane.showMessageDialog(this, "Accepted Request");
                } else {
                    donateAcceptDialog.setVisible(false);
                    JOptionPane.showMessageDialog(this, "Some Error Occured");
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(GUIFrames.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_acceptDonButtonActionPerformed

    private void cancelDonButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelDonButtonActionPerformed
        // TODO add your handling code here:
        donateAcceptDialog.setVisible(false);
    }//GEN-LAST:event_cancelDonButtonActionPerformed

    private void requestReqButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestReqButtonActionPerformed
        // TODO add your handling code here:
        String name = nameReqField.getText();
        String mobile = mobileReqField.getText();
        Database d = new Database();
        try {
            if(d.addRequest(name, mobile, 0, GlobalVariables.request))
            {
                requestDonationDialog.setVisible(false);
                JOptionPane.showMessageDialog(this,"Requested");
            }
            else
            {
                requestDonationDialog.setVisible(false);
                JOptionPane.showMessageDialog(this,"Some error occured");
                
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUIFrames.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_requestReqButtonActionPerformed

    private void cancelReqButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelReqButtonActionPerformed
        // TODO add your handling code here:
        requestDonationDialog.setVisible(false);
    }//GEN-LAST:event_cancelReqButtonActionPerformed

    private void rejectDonButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectDonButtonActionPerformed
        // TODO add your handling code here:
        try {
            Database d = new Database();
            if (d.editRequest(GlobalVariables.me.id, GlobalVariables.nameAccept, "NA", -1)) {
                donateAcceptDialog.setVisible(false);
                JOptionPane.showMessageDialog(this, "Rejected Request");
            } else {
                donateAcceptDialog.setVisible(false);
                JOptionPane.showMessageDialog(this, "Some Error Occured");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUIFrames.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_rejectDonButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIFrames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIFrames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIFrames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIFrames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIFrames().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptDonButton;
    private javax.swing.JComboBox bloodGroupComboBox;
    private javax.swing.JComboBox bloodGroupDropDown;
    private javax.swing.JComboBox bloodGroupProfDropDown;
    private javax.swing.JLabel bloodGroupProfLabel;
    private javax.swing.JLabel bloodgroupLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton cancelChangeButton;
    private javax.swing.JButton cancelDonButton;
    private javax.swing.JButton cancelReqButton;
    private javax.swing.JButton changePasswordButton;
    private javax.swing.JDialog changePasswordDialog;
    private javax.swing.JPasswordField confNewPasswordField;
    private javax.swing.JLabel confNewPasswordLabel;
    private javax.swing.JPasswordField confPasswordField;
    private javax.swing.JLabel confPasswordLabel;
    private javax.swing.JPasswordField currentPasswordField;
    private javax.swing.JLabel currentPasswordLabel;
    private javax.swing.JTextField dateDonField;
    private javax.swing.JLabel dateDonLabel;
    private javax.swing.JDialog donateAcceptDialog;
    private javax.swing.JTable donorListTable;
    private javax.swing.JButton editProfButton;
    private javax.swing.JTextField emailField;
    private javax.swing.JTextField emailProfField;
    private javax.swing.JLabel emailProfLabel;
    private javax.swing.JTextField emailRegField;
    private javax.swing.JLabel emailRegLabel;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JPanel historyRequest;
    private javax.swing.JLabel historyRequestLabel;
    private javax.swing.JTable historyRequestTable;
    private javax.swing.JScrollPane historyRequestTableScroll;
    private javax.swing.JButton loginButton;
    private javax.swing.JMenuItem loginMenuItem;
    private javax.swing.JPanel loginScreenPanel;
    private javax.swing.JMenuBar menu;
    private javax.swing.JTextField mobileField;
    private javax.swing.JLabel mobileLabel;
    private javax.swing.JTextField mobileProfField;
    private javax.swing.JLabel mobileProfLabel;
    private javax.swing.JTextField mobileReqField;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameProfField;
    private javax.swing.JLabel nameProfLabel;
    private javax.swing.JTextField nameReqField;
    private javax.swing.JLabel nameReqLabel;
    private javax.swing.JPasswordField newPasswordField;
    private javax.swing.JLabel newPasswordLabel;
    private javax.swing.JLabel newPasswordReqLabel;
    private javax.swing.JMenu options;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JPasswordField passwordRegField;
    private javax.swing.JLabel passwordRegLabel;
    private javax.swing.JPanel pendingRequest;
    private javax.swing.JLabel pendingRequestLabel;
    private javax.swing.JTable pendingRequestTable;
    private javax.swing.JScrollPane pendingRequestTableScroll;
    private javax.swing.JMenuItem profileMenuItem;
    private javax.swing.JPanel profilePanel;
    private javax.swing.JMenuItem registerMenuItem;
    private javax.swing.JPanel registerPanel;
    private javax.swing.JButton rejectDonButton;
    private javax.swing.JDialog requestDonationDialog;
    private javax.swing.JButton requestReqButton;
    private javax.swing.JButton resetProfButton;
    private javax.swing.JScrollPane scrollTable;
    private javax.swing.JButton searchButton;
    private javax.swing.JMenuItem searchMenuItem;
    private javax.swing.JPanel searchScreenPanel;
    private javax.swing.JButton signUpButton;
    private javax.swing.JButton submitButton;
    private javax.swing.JButton submitChangeButton;
    // End of variables declaration//GEN-END:variables

    private void changeComponents() {
        donorListTable.setModel(tableModel);
        showSearchScreen();
        donateAcceptDialog.pack();
        donateAcceptDialog.setSize(400, 400);

        requestDonationDialog.pack();
        requestDonationDialog.setSize(400, 400);

        donorListTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evnt) {
                if (evnt.getClickCount() == 2) {
                    int id = Integer.parseInt(donorListTable.getValueAt(donorListTable.getSelectedRow(), donorListTable.getColumn(GlobalVariables.col[0].toString()).getModelIndex()).toString());
                    System.out.println(id + "");
                    requestDonation(id);
                }
            }
        });
        pendingRequestTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evnt) {
                if (evnt.getClickCount() == 2) {
                    String name = pendingRequestTable.getValueAt(pendingRequestTable.getSelectedRow(), pendingRequestTable.getColumn(GlobalVariables.requestCol[0].toString()).getModelIndex()).toString();
                    acceptDialog(GlobalVariables.me.id, name, "NA");
                }
            }

        });
    }

    public void acceptDialog(int id, String name, String na) {
        donateAcceptDialog.setLocation(this.getLocation());
        donateAcceptDialog.setVisible(true);
        GlobalVariables.nameAccept = name;
        GlobalVariables.dateString = na;
    }

    public void requestDonation(int id) {
        requestDonationDialog.setLocation(this.getLocation());
        requestDonationDialog.setVisible(true);
        GlobalVariables.request = id;
    }

    private void showSearchScreen() {
        hideAll();
        searchScreenPanel.setVisible(true);
        setTitle("Search Donors");
        repaint();
    }

    private void showLoginScreen() {
        hideAll();
        setTitle("Login");
        nameField.setText("");
        passwordRegField.setText("");
        confPasswordField.setText("");
        mobileField.setText("");
        emailRegField.setText("");
        bloodGroupComboBox.setSelectedItem(0);
        loginScreenPanel.setVisible(true);
        repaint();
    }

    private void hideAll() {
        loginScreenPanel.setVisible(false);
        searchScreenPanel.setVisible(false);
        registerPanel.setVisible(false);
        profileMenuItem.setVisible(loggedIn);
        profilePanel.setVisible(false);
        repaint();
    }

    private void showRegisterScreen() {
        hideAll();
        setTitle("Register");
        registerPanel.setVisible(true);
        repaint();

    }

    private void showProfileScreen(Donor d) {
        hideAll();
        setTitle("Profile");
        profilePanel.setVisible(true);
        nameProfField.setText(d.name);
        emailProfField.setText(d.email);
        bloodGroupProfDropDown.setSelectedItem(d.bloodgroup);
        mobileProfField.setText(d.mobile);
        repaint();
    }
}
